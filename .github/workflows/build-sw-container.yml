name: Build and Push Docker image

on:
  push:
  workflow_dispatch:
      
jobs:
  make-date-tag:
    runs-on: ubuntu-latest
    if: startsWith(github.repository, 'opensciencegrid/')
    outputs:
      dtag: ${{ steps.mkdatetag.outputs.dtag }}
    env: 
      REPO: ${{ github.repository }}
    steps:
    - name: make date tag
      id: mkdatetag
      run: echo "::set-output name=dtag::$(date +%Y%m%d-%H%M)"

  build-image-list:
      runs-on: ubuntu-latest
      outputs:
        images: ${{ steps.image-list.outputs.json }}
      steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0

        - id: image-list
          run: |
            if [[ $GITHUB_EVENT_NAME == 'pull_request' ]] ||
              [[ $GITHUB_EVENT_NAME == 'push' ]]; then
                if [[ -n $GITHUB_BASE_REF ]]; then
                    # GITHUB_BASE_REF is only set for PRs
                    BASE=origin/$GITHUB_BASE_REF
                elif [[ $GITHUB_REF == 'refs/heads/main' ]]; then
                    BASE=${{github.event.before}}
                else
                    BASE=origin/master
                fi
                image_dirs=$(git diff --name-only \
                                      "$BASE" \
                                      "$GITHUB_SHA")
            else
                image_dirs=$(find . -type d -printf "%P\n")
            fi
            images=$(echo "$image_dirs" |
                    fgrep opensciencegrid/ |
                    cut -d/ -f -2 |
                    sort |
                    uniq |
                    head -c -1)
            image_json=$(echo -n "${images:-dummy}" | jq -Rcs '.|split("\n")')
            echo "::set-output name=json::$image_json"

  build:
    runs-on: ubuntu-latest
    needs: build-image-list
    if: needs.build-image-list.outputs.images != '["dummy"]'
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.build-image-list.outputs.images) }}
        yum_repo: ['development', 'testing', 'release']
        osg_series: ['3.5', '3.6']
    steps:
      - uses: opensciencegrid/build-container-action@v0.3.1
        with:
          osg_series: ${{ matrix.osg_series }}
          repo: ${{ matrix.yum_repo }}
          context: ${{ matrix.image }}

  push:
    runs-on: ubuntu-latest
    if: >-
      github.ref == 'refs/heads/master' &&
      github.event_name != 'pull_request' &&
      github.repository_owner == 'opensciencegrid' &&
      needs.build-image-list.outputs.images != '["dummy"]'
    needs: [make-date-tag, build-image-list, build]
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.build-image-list.outputs.images) }}
        yum_repo: ['development', 'testing', 'release']
        osg_series: ['3.5', '3.6']
        registry:
          - url: hub.opensciencegrid.org
            username: OSG_HARBOR_ROBOT_USER
            password: OSG_HARBOR_ROBOT_PASSWORD
          - url: docker.io
            username: DOCKER_USERNAME
            password: DOCKER_PASSWORD
    steps:
      - uses: opensciencegrid/push-container-action@v0.5.0
        with:
          repo: ${{ matrix.yum_repo}}
          osg_series: ${{ matrix.osg_series }}
          context: ${{ matrix.image }}
          registry_url: ${{ matrix.registry.url }}
          registry_user: ${{ secrets[matrix.registry.username] }}
          registry_pass: ${{ secrets[matrix.registry.password] }}
